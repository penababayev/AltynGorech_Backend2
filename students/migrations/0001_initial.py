# Generated by Django 5.2.5 on 2025-08-26 16:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=80, verbose_name='Ad')),
                ('last_name', models.CharField(max_length=80, verbose_name='Soyad')),
                ('phone', models.CharField(blank=True, max_length=40, null=True, verbose_name='Veli Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ene-Ata',
                'verbose_name_plural': 'Ene-Atalar',
                'ordering': ['last_name', 'first_name'],
                'indexes': [models.Index(fields=['last_name', 'first_name'], name='students_gu_last_na_db4fcb_idx'), models.Index(fields=['phone'], name='students_gu_phone_a1a96b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_number', models.CharField(db_index=True, editable=False, help_text='Biçim: KOD-YIL-XXXX (örn: BRN-2025-0001)', max_length=24, unique=True, verbose_name='Öğrenci No')),
                ('first_name', models.CharField(max_length=80, verbose_name='Ad')),
                ('last_name', models.CharField(max_length=80, verbose_name='Soyad')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Erkek'), ('F', 'Kadın'), ('O', 'Diğer/Belirtmek İstemiyorum')], max_length=1, verbose_name='Cinsiyet')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='E-posta')),
                ('phone', models.CharField(max_length=40, unique=True, verbose_name='Telefon')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('status', models.CharField(choices=[('ACTIVE', 'Aktif'), ('GRADUATED', 'Mezun'), ('SUSPENDED', 'Donduruldu'), ('LEFT', 'Ayrıldı')], default='ACTIVE', max_length=12, verbose_name='Durum')),
                ('enrollment_date', models.DateField(auto_now_add=True, verbose_name='Kayıt Tarihi')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='core.branch', verbose_name='Şube')),
            ],
            options={
                'verbose_name': 'Okuwçy',
                'verbose_name_plural': 'Okuwçylar',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentGuardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.CharField(choices=[('MOTHER', 'Anne'), ('FATHER', 'Baba'), ('SIBLING', 'Kardeş'), ('RELATIVE', 'Akraba'), ('GUARDIAN', 'Yasal Veli'), ('OTHER', 'Diğer')], default='GUARDIAN', max_length=16, verbose_name='İlişki')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Birincil veli')),
                ('is_emergency_contact', models.BooleanField(default=True, verbose_name='Acil durum kişisi')),
                ('legal_custody', models.BooleanField(default=False, verbose_name='Yasal velayet')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('guardian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_links', to='students.guardian')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guardian_links', to='students.student')),
            ],
            options={
                'verbose_name': 'Okuwçy–Hossary',
                'verbose_name_plural': 'Okuwçy–Hossarlary',
            },
        ),
        migrations.CreateModel(
            name='StudentNumberSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_code', models.CharField(max_length=10)),
                ('year', models.PositiveIntegerField()),
                ('last_seq', models.PositiveIntegerField(default=0)),
            ],
            options={
                'indexes': [models.Index(fields=['school_code', 'year'], name='students_st_school__7f22db_idx')],
                'unique_together': {('school_code', 'year')},
            },
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['last_name', 'first_name'], name='students_st_last_na_3e473b_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['branch', 'status'], name='students_st_branch__4eab65_idx'),
        ),
        migrations.AddIndex(
            model_name='studentguardian',
            index=models.Index(fields=['student', 'guardian'], name='students_st_student_9ea426_idx'),
        ),
        migrations.AddIndex(
            model_name='studentguardian',
            index=models.Index(fields=['student', 'is_primary'], name='students_st_student_428fb6_idx'),
        ),
        migrations.AddConstraint(
            model_name='studentguardian',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('student',), name='uniq_primary_guardian_per_student'),
        ),
        migrations.AlterUniqueTogether(
            name='studentguardian',
            unique_together={('student', 'guardian')},
        ),
    ]
