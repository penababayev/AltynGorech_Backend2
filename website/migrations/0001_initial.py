# Generated by Django 5.2.5 on 2025-08-27 14:59

import django.db.models.deletion
import website.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('courses', '0001_initial'),
        ('staffs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160, verbose_name='Başlık')),
                ('body', models.TextField(blank=True, verbose_name='İçerik')),
                ('link_url', models.URLField(blank=True, verbose_name='Bağlantı')),
                ('audience', models.CharField(choices=[('PUBLIC', 'Public (Herkes)'), ('STUDENTS', 'Öğrenciler'), ('TEACHERS', 'Öğretmenler'), ('ENROLLED', 'Kayıtlı Öğrenciler'), ('STAFF', 'Personel')], db_index=True, default='PUBLIC', max_length=10, verbose_name='Hedef')),
                ('status', models.CharField(choices=[('DRAFT', 'Taslak'), ('SCHEDULED', 'Zamanlanmış'), ('PUBLISHED', 'Yayında'), ('ARCHIVED', 'Arşiv')], db_index=True, default='DRAFT', max_length=10, verbose_name='Durum')),
                ('priority', models.CharField(choices=[('INFO', 'Bilgi'), ('SUCCESS', 'Başarılı'), ('WARNING', 'Uyarı'), ('DANGER', 'Acil')], db_index=True, default='INFO', max_length=10, verbose_name='Öncelik')),
                ('pinned', models.BooleanField(default=False, verbose_name='Üste Sabitle')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('publish_start_at', models.DateTimeField(blank=True, null=True, verbose_name='Yayın Başlangıcı')),
                ('publish_end_at', models.DateTimeField(blank=True, null=True, verbose_name='Yayın Bitişi')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements', to='core.branch')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements', to='courses.course')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_announcements', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='core.organization')),
            ],
            options={
                'verbose_name': 'Duyuru',
                'verbose_name_plural': 'Duyurular',
                'ordering': ['-pinned', '-publish_start_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=website.models.announcement_upload_to)),
                ('name', models.CharField(blank=True, max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='website.announcement')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=website.models.announcement_upload_to)),
                ('caption', models.CharField(blank=True, max_length=160, verbose_name='Başlık/Alt Yazı')),
                ('alt', models.CharField(blank=True, max_length=160, verbose_name='Alt Metin (SEO/erişilebilirlik)')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Sıra')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='website.announcement')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='BranchWeb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_override', models.CharField(blank=True, max_length=140, verbose_name='Başlık (Web)')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama (Web)')),
                ('address_override', models.CharField(blank=True, max_length=255, verbose_name='Adres (Web)')),
                ('phone_override', models.CharField(blank=True, max_length=40, verbose_name='Telefon (Web)')),
                ('email_override', models.EmailField(blank=True, max_length=254, verbose_name='E-posta (Web)')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=website.models.branch_image_upload_path)),
                ('photo_alt', models.CharField(blank=True, max_length=160, verbose_name='Görsel ALT')),
                ('map_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Enlem')),
                ('map_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Boylam')),
                ('map_embed_url', models.URLField(blank=True, verbose_name='Harita Embed URL')),
                ('slug', models.SlugField(blank=True, max_length=140, unique=True)),
                ('is_visible', models.BooleanField(default=True, verbose_name='Yayında')),
                ('sort_order', models.PositiveIntegerField(db_index=True, default=100, verbose_name='Sıra')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='website_profile', to='core.branch')),
            ],
            options={
                'verbose_name': 'Şube (Web)',
                'verbose_name_plural': 'Şubeler (Web)',
                'ordering': ['sort_order', 'branch__name'],
            },
        ),
        migrations.CreateModel(
            name='CourseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Sapagyň kurs adlandyrmalary')),
                ('description', models.TextField(default='', help_text='Kursuň giňişleýin açyklamasy', verbose_name='Açyklama')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='courses.subject', verbose_name='Sapagyň ady')),
            ],
            options={
                'verbose_name': 'Okuw (Web)',
                'verbose_name_plural': 'Okuwlar (Web)',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160, verbose_name='Başlık')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('link_url', models.URLField(blank=True, verbose_name='Dış Bağlantı')),
                ('audience', models.CharField(choices=[('PUBLIC', 'Public (Herkes)'), ('STUDENTS', 'Öğrenciler'), ('TEACHERS', 'Öğretmenler'), ('ENROLLED', 'Kayıtlı Öğrenciler'), ('STAFF', 'Personel')], db_index=True, default='PUBLIC', max_length=10, verbose_name='Hedef')),
                ('status', models.CharField(choices=[('DRAFT', 'Taslak'), ('SCHEDULED', 'Zamanlanmış'), ('PUBLISHED', 'Yayında'), ('CANCELLED', 'İptal'), ('ARCHIVED', 'Arşiv')], db_index=True, default='DRAFT', max_length=10, verbose_name='Durum')),
                ('priority', models.CharField(choices=[('INFO', 'Bilgi'), ('SUCCESS', 'Başarılı'), ('WARNING', 'Uyarı'), ('DANGER', 'Acil')], db_index=True, default='INFO', max_length=10, verbose_name='Öncelik')),
                ('pinned', models.BooleanField(default=False, verbose_name='Üste Sabitle')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('start_at', models.DateTimeField(db_index=True, verbose_name='Başlangıç')),
                ('end_at', models.DateTimeField(blank=True, null=True, verbose_name='Bitiş')),
                ('publish_start_at', models.DateTimeField(blank=True, null=True, verbose_name='Yayın Başlangıcı')),
                ('publish_end_at', models.DateTimeField(blank=True, null=True, verbose_name='Yayın Bitişi')),
                ('is_online', models.BooleanField(default=False, verbose_name='Online')),
                ('meeting_url', models.URLField(blank=True, verbose_name='Toplantı Linki')),
                ('venue_name', models.CharField(blank=True, max_length=160, verbose_name='Mekân Adı')),
                ('venue_address', models.TextField(blank=True, verbose_name='Adres')),
                ('venue_city', models.CharField(blank=True, max_length=80, verbose_name='Şehir')),
                ('venue_room', models.CharField(blank=True, max_length=80, verbose_name='Salon/No')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Kapasite')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='core.branch')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='courses.course')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_events', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='core.organization')),
            ],
            options={
                'verbose_name': 'Etkinlik',
                'verbose_name_plural': 'Etkinlikler',
                'ordering': ['-pinned', 'start_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=website.models.event_upload_to)),
                ('name', models.CharField(blank=True, max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='website.event')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=website.models.event_upload_to)),
                ('caption', models.CharField(blank=True, max_length=160, verbose_name='Başlık/Alt Yazı')),
                ('alt', models.CharField(blank=True, max_length=160, verbose_name='Alt Metin (SEO/erişilebilirlik)')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Sıra')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='website.event')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_override', models.CharField(blank=True, max_length=120, verbose_name='Unvan (Web)')),
                ('bio_public', models.TextField(blank=True, verbose_name='Kısa Biyografi')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=website.models.teacher_image_upload_path)),
                ('photo_alt', models.CharField(blank=True, max_length=160, verbose_name='Foto ALT')),
                ('slug', models.SlugField(blank=True, max_length=140)),
                ('is_visible', models.BooleanField(default=True, verbose_name='Yayında')),
                ('sort_order', models.PositiveIntegerField(db_index=True, default=100, verbose_name='Sıra')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_profiles', to='core.branch')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profiles', to='core.organization')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='web_profiles', to='staffs.teacher')),
            ],
            options={
                'verbose_name': 'Öğretmen Profili',
                'verbose_name_plural': 'Öğretmen Profilleri',
                'ordering': ['sort_order', 'teacher__last_name'],
            },
        ),
        migrations.AddIndex(
            model_name='announcement',
            index=models.Index(fields=['audience', 'status', 'is_active'], name='website_ann_audienc_937f66_idx'),
        ),
        migrations.AddIndex(
            model_name='announcement',
            index=models.Index(fields=['branch', 'course'], name='website_ann_branch__4d5560_idx'),
        ),
        migrations.AddIndex(
            model_name='announcement',
            index=models.Index(fields=['pinned', 'priority'], name='website_ann_pinned_21491d_idx'),
        ),
        migrations.AddIndex(
            model_name='announcementimage',
            index=models.Index(fields=['announcement', 'order'], name='website_ann_announc_f8dd1c_idx'),
        ),
        migrations.AddIndex(
            model_name='branchweb',
            index=models.Index(fields=['is_visible', 'sort_order'], name='website_bra_is_visi_bda971_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['audience', 'status', 'is_active'], name='website_eve_audienc_6178bb_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['branch', 'course'], name='website_eve_branch__212028_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['start_at'], name='website_eve_start_a_c1f737_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['pinned', 'priority'], name='website_eve_pinned_6fc936_idx'),
        ),
        migrations.AddIndex(
            model_name='eventimage',
            index=models.Index(fields=['event', 'order'], name='website_eve_event_i_c98e75_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['organization', 'is_visible', 'sort_order'], name='website_tea_organiz_7e477b_idx'),
        ),
        migrations.AddIndex(
            model_name='teacherprofile',
            index=models.Index(fields=['organization', 'branch', 'is_visible'], name='website_tea_organiz_a0d3bb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teacherprofile',
            unique_together={('organization', 'slug')},
        ),
    ]
