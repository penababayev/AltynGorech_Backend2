# Generated by Django 5.2.5 on 2025-08-23 05:10

import courses.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt', models.PositiveIntegerField(default=1, help_text='Aynı sınav için kaçıncı deneme.')),
                ('status', models.CharField(choices=[('REGISTERED', 'Kayıtlı'), ('STARTED', 'Başladı'), ('SUBMITTED', 'Teslim Edildi'), ('GRADED', 'Notlandı'), ('ABSENT', 'Gelmedi'), ('CANCELLED', 'İptal')], db_index=True, default='REGISTERED', max_length=12)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('raw_score', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Ham Puan')),
                ('max_score', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Maksimum Puan')),
                ('percent', models.DecimalField(blank=True, decimal_places=2, help_text='Otomatik hesaplanır.', max_digits=6, null=True, verbose_name='Yüzde')),
                ('pass_mark', models.DecimalField(decimal_places=2, default=50.0, help_text='% cinsinden', max_digits=5, verbose_name='Geçme Yüzdesi')),
                ('passed', models.BooleanField(default=False, verbose_name='Geçti')),
                ('is_absent', models.BooleanField(default=False, verbose_name='Devamsız')),
                ('notes', models.TextField(blank=True, verbose_name='Değerlendirici Notu')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Synag Netijesi',
                'verbose_name_plural': 'Synag Netijeleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PRESENT', 'Present'), ('ABSENT', 'Absent'), ('LATE', 'Late'), ('EXCUSED', 'Excused')], default='PRESENT', max_length=10)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('marked_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Boş bırakılırsa genelde konu + seviye ile gösterilir.', max_length=160, verbose_name='Kurs Başlığı')),
                ('course_code', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='Kurs Kodu')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Bitiş Tarihi')),
                ('time_start', models.TimeField(blank=True, null=True, verbose_name='Ders Başlangıç Saati')),
                ('time_end', models.TimeField(blank=True, null=True, verbose_name='Ders Bitiş Saati')),
                ('days_of_week', models.CharField(blank=True, help_text="Örn: MON,WED,FRI (basit CSV). Postgres'te ArrayField tercih edebilirsin.", max_length=32, verbose_name='Günler')),
                ('room', models.CharField(blank=True, max_length=64, verbose_name='Sınıf/Salon')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Kontenjan')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ücret')),
                ('currency', models.CharField(default='EUR', max_length=8, verbose_name='Para Birimi')),
                ('status', models.CharField(choices=[('DRAFT', 'Taslak'), ('OPEN', 'Kayıta Açık'), ('FULL', 'Kontenjan Dolu'), ('ONGOING', 'Devam Ediyor'), ('COMPLETED', 'Tamamlandı'), ('CANCELLED', 'İptal')], default='OPEN', max_length=12, verbose_name='Durum')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Kurs',
                'verbose_name_plural': 'Kurslar',
                'ordering': ['-start_date', 'subject__name'],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'Active'), ('PENDING', 'Pending'), ('CANCELLED', 'Cancelled'), ('COMPLETED', 'Completed')], max_length=20)),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=180, verbose_name='Başlık')),
                ('code', models.CharField(db_index=True, help_text='Kurum içinde benzersiz olmalı.', max_length=40, verbose_name='Kod')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('status', models.CharField(choices=[('DRAFT', 'Taslak'), ('PUBLISHED', 'Yayında'), ('ARCHIVED', 'Arşiv')], db_index=True, default='DRAFT', max_length=10, verbose_name='Durum')),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Herkes'), ('ENROLLED', 'Kayıtlı Öğrenciler'), ('STAFF', 'Sadece Personel')], db_index=True, default='ENROLLED', max_length=10, verbose_name='Görünürlük')),
                ('material_type', models.CharField(choices=[('FILE', 'Dosya'), ('LINK', 'Bağlantı'), ('VIDEO', 'Video (YouTube/Vimeo)'), ('EMBED', 'Gömülü (iframe/HTML)'), ('HTML', 'Serbest Metin/HTML')], db_index=True, default='FILE', max_length=8, verbose_name='Tür')),
                ('publish_start_at', models.DateTimeField(blank=True, null=True, verbose_name='Yayın Başlangıcı')),
                ('publish_end_at', models.DateTimeField(blank=True, null=True, verbose_name='Yayın Bitişi')),
                ('file', models.FileField(blank=True, null=True, upload_to=courses.models.material_upload_to, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'ppt', 'pptx', 'xls', 'xlsx', 'zip', 'rar', 'jpg', 'jpeg', 'png', 'mp4', 'mp3'])], verbose_name='Dosya')),
                ('link_url', models.URLField(blank=True, verbose_name='Bağlantı URL')),
                ('video_url', models.URLField(blank=True, help_text='YouTube/Vimeo gibi bir link.', verbose_name='Video URL')),
                ('embed_html', models.TextField(blank=True, verbose_name='Embed HTML')),
                ('html_content', models.TextField(blank=True, verbose_name='Serbest Metin/HTML')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Sıra')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Materyal',
                'verbose_name_plural': 'Materyaller',
                'ordering': ['order', '-publish_start_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaterialFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=courses.models.material_upload_to)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('capacity', models.PositiveIntegerField(default=20)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='Ders Kodu')),
                ('name', models.CharField(max_length=120, verbose_name='Ders Adı')),
                ('level', models.CharField(blank=True, choices=[('A1', 'A1'), ('A2', 'A2'), ('B1', 'B1'), ('B2', 'B2'), ('C1', 'C1'), ('C2', 'C2'), ('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced')], max_length=16, verbose_name='Seviye')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Sapak',
                'verbose_name_plural': 'Sapaklar',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='submissions/%Y/%m/')),
                ('note', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=48, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=180, verbose_name='Başlık')),
                ('code', models.CharField(db_index=True, help_text='Kurum içinde benzersiz olmalı.', max_length=40, verbose_name='Kod')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('status', models.CharField(choices=[('DRAFT', 'Taslak'), ('PUBLISHED', 'Yayında'), ('CLOSED', 'Kapandı'), ('ARCHIVED', 'Arşiv')], db_index=True, default='DRAFT', max_length=12, verbose_name='Durum')),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='Başlangıç')),
                ('end_at', models.DateTimeField(blank=True, null=True, verbose_name='Bitiş')),
                ('duration_min', models.PositiveIntegerField(blank=True, null=True, verbose_name='Süre (dk)')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Kontenjan')),
                ('is_online', models.BooleanField(default=False, verbose_name='Online Sınav')),
                ('meeting_url', models.URLField(blank=True, verbose_name='Toplantı/Sınav Linki')),
                ('venue_name', models.CharField(blank=True, max_length=160, verbose_name='Mekân Adı')),
                ('venue_address', models.TextField(blank=True, verbose_name='Adres')),
                ('venue_room', models.CharField(blank=True, max_length=80, verbose_name='Salon/No')),
                ('venue_city', models.CharField(blank=True, max_length=80, verbose_name='Şehir')),
                ('venue_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Enlem')),
                ('venue_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Boylam')),
                ('map_embed_url', models.URLField(blank=True, verbose_name='Harita Embed URL')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessments', to='core.branch')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='core.organization')),
            ],
            options={
                'verbose_name': 'Synag',
                'verbose_name_plural': 'Synaglar',
                'ordering': ['-start_at', '-created_at'],
            },
        ),
    ]
