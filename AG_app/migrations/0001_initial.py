# Generated by Django 5.2.5 on 2025-08-18 15:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('percent', models.DecimalField(decimal_places=2, help_text='Örn: %10 için 10.00', max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('tax_number', models.CharField(blank=True, max_length=32, null=True)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('body', models.TextField()),
                ('visible_to', models.CharField(default='ALL', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('publish_until', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements_created', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='AG_app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('code', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('level', models.CharField(choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('UPPER', 'Upper'), ('ADVANCED', 'Advanced')], default='BEGINNER', max_length=20)),
                ('capacity', models.PositiveIntegerField(default=25)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='AG_app.branch')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teaching_courses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='AG_app.course')),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('type', models.CharField(choices=[('EXAM', 'Exam'), ('QUIZ', 'Quiz'), ('ASSIGNMENT', 'Assignment')], default='EXAM', max_length=20)),
                ('date', models.DateField()),
                ('max_score', models.DecimalField(decimal_places=2, default=100, max_digits=6)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='AG_app.course')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PENDING', 'Pending'), ('CANCELLED', 'Cancelled'), ('COMPLETED', 'Completed')], default='ACTIVE', max_length=20)),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='AG_app.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guardian_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('due_date', models.DateField()),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='AG_app.discount')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='AG_app.enrollment')),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=150)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='NEW', max_length=30)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='AG_app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='PENDING', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='AG_app.course')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='AG_app.lead')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('file', models.FileField(upload_to='materials/%Y/%m/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='AG_app.course')),
            ],
        ),
        migrations.AddField(
            model_name='branch',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='AG_app.organization'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_at', models.DateTimeField(auto_now_add=True)),
                ('method', models.CharField(default='CASH', max_length=30)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='AG_app.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('installments', models.PositiveIntegerField(default=1)),
                ('description', models.TextField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_plans', to='AG_app.course')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='payment_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='AG_app.paymentplan'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('TEACHER', 'Teacher'), ('STUDENT', 'Student'), ('PARENT', 'Parent/Guardian')], default='STUDENT', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profiles', to='AG_app.branch')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profiles', to='AG_app.organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('capacity', models.PositiveIntegerField(default=20)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='AG_app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='ClassSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='AG_app.course')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='AG_app.room')),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_number', models.CharField(db_index=True, editable=False, help_text='Biçim: KOD-YIL-XXXX (örn: BRN-2025-0001)', max_length=24, unique=True, verbose_name='Öğrenci No')),
                ('first_name', models.CharField(max_length=80, verbose_name='Ad')),
                ('last_name', models.CharField(max_length=80, verbose_name='Soyad')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Erkek'), ('F', 'Kadın'), ('O', 'Diğer/Belirtmek İstemiyorum')], max_length=1, verbose_name='Cinsiyet')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='E-posta')),
                ('phone', models.CharField(blank=True, max_length=40, null=True, verbose_name='Telefon')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('guardian_name', models.CharField(blank=True, max_length=120, null=True, verbose_name='Veli Ad Soyad')),
                ('guardian_phone', models.CharField(blank=True, max_length=40, null=True, verbose_name='Veli Telefon')),
                ('status', models.CharField(choices=[('ACTIVE', 'Aktif'), ('GRADUATED', 'Mezun'), ('SUSPENDED', 'Donduruldu'), ('LEFT', 'Ayrıldı')], default='ACTIVE', max_length=12, verbose_name='Durum')),
                ('enrollment_date', models.DateField(auto_now_add=True, verbose_name='Kayıt Tarihi')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='AG_app.branch')),
            ],
            options={
                'verbose_name': 'Öğrenci',
                'verbose_name_plural': 'Öğrenciler',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentGuardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.CharField(blank=True, max_length=50, null=True)),
                ('guardian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='AG_app.guardian')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guardian_links', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentNumberSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_code', models.CharField(max_length=10)),
                ('year', models.PositiveIntegerField()),
                ('last_seq', models.PositiveIntegerField(default=0)),
            ],
            options={
                'indexes': [models.Index(fields=['school_code', 'year'], name='AG_app_stud_school__14a14f_idx')],
                'unique_together': {('school_code', 'year')},
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('code', models.CharField(blank=True, max_length=30, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='AG_app.organization')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='courses', to='AG_app.subject'),
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='submissions/%Y/%m/')),
                ('note', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='AG_app.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=6)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='AG_app.assessment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_results', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['assessment', 'student'], name='AG_app_asse_assessm_565ffa_idx')],
                'unique_together': {('assessment', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PRESENT', 'Present'), ('ABSENT', 'Absent'), ('LATE', 'Late'), ('EXCUSED', 'Excused')], default='PRESENT', max_length=10)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('marked_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='AG_app.classsession')),
            ],
            options={
                'indexes': [models.Index(fields=['session', 'student'], name='AG_app_atte_session_de138f_idx')],
                'unique_together': {('session', 'student')},
            },
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['course', 'student', 'status'], name='AG_app_enro_course__efedb0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('course', 'student')},
        ),
        migrations.AlterUniqueTogether(
            name='application',
            unique_together={('lead', 'course')},
        ),
        migrations.AddIndex(
            model_name='branch',
            index=models.Index(fields=['organization', 'name'], name='AG_app_bran_organiz_cb0e28_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='branch',
            unique_together={('organization', 'name')},
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['branch', 'name'], name='AG_app_room_branch__5239cb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('branch', 'name')},
        ),
        migrations.AddIndex(
            model_name='classsession',
            index=models.Index(fields=['course', 'date'], name='AG_app_clas_course__5d83f9_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['last_name', 'first_name'], name='AG_app_stud_last_na_234660_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['branch', 'status'], name='AG_app_stud_branch__530e10_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentguardian',
            unique_together={('student', 'guardian')},
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['organization', 'name'], name='AG_app_subj_organiz_6d94f0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='subject',
            unique_together={('organization', 'name')},
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['branch', 'subject', 'is_active'], name='AG_app_cour_branch__e22130_idx'),
        ),
        migrations.AddIndex(
            model_name='submission',
            index=models.Index(fields=['assignment', 'student'], name='AG_app_subm_assignm_f929fc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='submission',
            unique_together={('assignment', 'student')},
        ),
    ]
